from django.http import HttpResponseRedirect
from django.urls import resolve

import pytz
from django.utils import timezone
from django.utils.deprecation import MiddlewareMixin


class RemoveSlashMiddleware:
    """
    Middleware for removing trailing slashes from URLs.

    This middleware removes the trailing slash from URLs, except for the admin panel URLs.
    It is designed to work with the default Django routing settings.

    Attributes:
        get_response (callable): The next middleware or view function in the chain.

    Methods:
        __call__(request): Process the request and return a response.

    Note:
        This middleware does not handle URLs generated through AJAX, as it may interfere with AJAX requests.

    """

    def __init__(self, get_response):
        """
        Initialize the RemoveSlashMiddleware.

        Args:
            get_response (callable): The next middleware or view function in the chain.
        """

        self.get_response = get_response

    def __call__(self, request):
        """
        Process the request and return a response.

        If the URL is not for the admin panel and is an XMLHttpRequest (AJAX) request, the trailing slash is removed.
        The modified request is then passed to the next middleware or view function.

        Args:
            request (HttpRequest): The incoming request.

        Returns:
            HttpResponse: The response generated by the view or the next middleware.
        """

        url_name = resolve(request.path_info).namespace
        if url_name != 'admin' and request.headers.get('X-Requested-With') == 'XMLHttpRequest':
            if request.path != '/' and request.path.endswith('/'):
                return HttpResponseRedirect(request.path[:-1])
        response = self.get_response(request)
        return response


class TimezoneMiddleware(MiddlewareMixin):
    def process_request(self, request):
        tzname = request.COOKIES.get('timezone')
        if tzname:
            timezone.activate(pytz.timezone(tzname))
        else:
            timezone.deactivate()

